import{f as i}from"./fetch-CZzGIe3w.js";/* empty css                 */import{g as p}from"./entries-BI79NLJC.js";const h=async()=>{const e=await i("http://localhost:3000/api/items");if(e.error){console.log("Tapahtui virhe fetch haussa!!");return}console.log(e)},l=document.querySelector(".info_dialog"),g=document.querySelector(".info_dialog button");g.addEventListener("click",()=>{l.close()});const c=document.getElementById("snackbar"),u=(t,e="")=>{c.innerText=t,c.className=`show ${e}`.trim(),setTimeout(()=>{c.className=c.className.replace("show","").trim()},3e3)},m=async()=>{const t="http://localhost:3000/api/users";let e={};e={Authorization:`Bearer ${localStorage.getItem("token")}`};const r={headers:e};console.log(r);const o=await i(t,r);if(o.error){console.log("Tapahtui virhe fetch haussa!!");return}console.log(o);const d=document.querySelector(".tbody");d.innerHTML="",o.forEach(s=>{const n=document.createElement("tr");n.innerHTML=`
        <td>${s.username}</td>
        <td>${s.email}</td>
        <td><button class="check" data-id="${s.user_id}">Info</button></td>
        <td><button class="del" data-id="${s.user_id}">Delete</button></td>
        <td>${s.user_id}</td>
      `,d.appendChild(n)}),y()},y=()=>{const t=document.querySelectorAll(".check");console.log(t),t.forEach(e=>{e.addEventListener("click",async a=>{console.log("Klikkasit nappulaa:",a.target);const r=a.target.dataset.id;console.log("Haetaan tietoja k√§ytt√§j√§lle id:ll√§:",r);const o=await k(r);console.log(o),o&&(l.querySelector("p").innerHTML="",l.showModal(),l.querySelector("p").innerHTML=`
          <div>User ID: <span>${o.user_id}</span></div>
          <div>User Name: <span>${o.username}</span></div>
          <div>Email: <span>${o.email}</span></div>
          <div>Role: <span>${o.user_level}</span></div>`)})})},k=async t=>{const e=await i(`http://localhost:3000/api/users/${t}`);return e.error?(console.error(`Error fetching item with ID ${t}:`,e.error),alert(`Error: ${e.error}`),null):e},v=async t=>{t.preventDefault();const e=document.querySelector("#username").value.trim(),a=document.querySelector("#password").value.trim(),r=document.querySelector("#email").value.trim(),o="http://localhost:3000/api/users",s={body:JSON.stringify({username:e,password:a,email:r}),method:"POST",headers:{"Content-type":"application/json"}};console.log(s);const n=await i(o,s);if(n.error){console.log(n.error),u("Virhe l√§hett√§misess√§, t√§yt√§ kaikki vaadittavat kent√§t!","error");return}n.message&&(console.log(n.message),u("Onnistunut k√§ytt√§j√§n lis√§√§minen :) üíï","success")),console.log(n),document.querySelector(".addform").reset(),m()},f=async()=>{try{const t=await fetch("https://api.chucknorris.io/jokes/random");console.log(t);const e=await t.json();console.log(e),console.log(e.value)}catch(t){console.error("Virhe:",t)}};document.querySelector("#app").innerHTML="Moi t√§ss√§ oman APIn harjoituksia";f();const S=document.querySelector(".get_items");S.addEventListener("click",h);const w=document.querySelector(".get_users");w.addEventListener("click",m);const E=document.querySelector(".formpost");E.addEventListener("click",v);const q=document.querySelector(".get_entries");q.addEventListener("click",p);
